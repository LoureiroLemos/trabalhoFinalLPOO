/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import model.Automovel;
import model.Cliente;
import model.Locacao;
import model.Motocicleta;
import model.Van;
import model.Veiculo;
import model.enums.Categoria;
import model.enums.Estado;
import model.enums.Marca;
import model.enums.ModeloAutomovel;
import model.enums.ModeloMotocicleta;
import model.enums.ModeloVan;
import model.tablemodel.VeiculoLocacaoTableModel;
import model.tablemodel.VeiculoTableModel;
import repository.ClienteRepository;
import repository.VeiculoRepository;
/**
 *
 * @author loure
 */
public class ViewVeiculo extends javax.swing.JFrame {
    
    private VeiculoTableModel veiculoTableModel;
    private VeiculoLocacaoTableModel veiculoLocacaoTableModel;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ViewVeiculo.class.getName());

    /**
     * Creates new form ViewVeiculo1
     */
    public ViewVeiculo() {
        initComponents();
        veiculoTableModel = new VeiculoTableModel();
        tblVeiculos.setModel(veiculoTableModel);
        
        veiculoLocacaoTableModel = new VeiculoLocacaoTableModel(new ArrayList<>());
        tblVeiculosDisponiveis.setModel(veiculoLocacaoTableModel);
        
        //preenche comboBox de Inclusão de veículos
        cbTipo.addActionListener(e -> atualizarModelos());
        cbTipo.addActionListener(e -> atualizarCombosPorTipo());
        this.setLocationRelativeTo(null);
        
        //preenche comboBox de Locação de veículos
        cbTipo1.removeAllItems();
        cbTipo1.addItem("Todos"); // opcional
        cbTipo1.addItem("Automóvel");
        cbTipo1.addItem("Motocicleta");
        cbTipo1.addItem("Van");
        
        preencherFiltrosLocacao();
        
        
        //tentativa de formatar o valor de compra
        java.text.NumberFormat moedaFormat = java.text.NumberFormat.getNumberInstance(new java.util.Locale("pt", "BR"));
        moedaFormat.setMinimumFractionDigits(2);
        moedaFormat.setMaximumFractionDigits(2);

        txtValorCompra.setFormatterFactory(
            new javax.swing.text.DefaultFormatterFactory(
                new javax.swing.text.NumberFormatter(moedaFormat)
            )
        );
        
        
        txtBuscaCliente.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filtrarClientes();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filtrarClientes();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filtrarClientes();
            }
        });
        

      
        
        
        // Automóveis
        Veiculo a1 = new Automovel(2021, "AAA-1234", 52000.0, Estado.DISPONIVEL, Categoria.POPULAR, Marca.GM, ModeloAutomovel.CORSA);
        Veiculo a2 = new Automovel(2022, "BBB-5678", 67000.0, Estado.DISPONIVEL, Categoria.INTERMEDIARIO, Marca.VW, ModeloAutomovel.GOL);
        Veiculo a3 = new Automovel(2019, "CCC-9999", 85000.0, Estado.NOVO, Categoria.LUXO, Marca.FIAT, ModeloAutomovel.GOL);

        // Motocicletas
        Veiculo m1 = new Motocicleta(2020, "DDD-0001", 15000.0, Estado.DISPONIVEL, Categoria.POPULAR, Marca.HONDA, ModeloMotocicleta.CG125);
        Veiculo m2 = new Motocicleta(2023, "EEE-1111", 28000.0, Estado.NOVO, Categoria.INTERMEDIARIO, Marca.HARLEY_DAVIDSON, ModeloMotocicleta.CG125);

        // Vans
        Veiculo v1 = new Van(2017, "FFF-2222", 70000.0, Estado.DISPONIVEL, Categoria.INTERMEDIARIO, Marca.VW, ModeloVan.SPRINTER);
        Veiculo v2 = new Van(2021, "GGG-3333", 88000.0, Estado.DISPONIVEL, Categoria.LUXO, Marca.MERCEDES, ModeloVan.SPRINTER);

        // Registro no repositório e tabelas
        for (Veiculo v : List.of(a1, a2, a3, m1, m2, v1, v2)) {
            VeiculoRepository.getInstance().adicionar(v);
            veiculoTableModel.adicionar(v);
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pIncluir = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnIncluir = new javax.swing.JButton();
        txtValorCompra = new javax.swing.JFormattedTextField();
        txtPlaca = new javax.swing.JFormattedTextField();
        spAno = new javax.swing.JSpinner();
        cbModelo = new javax.swing.JComboBox<>();
        cbCategoria = new javax.swing.JComboBox<>();
        cbEstado = new javax.swing.JComboBox<>();
        cbMarca = new javax.swing.JComboBox<>();
        cbTipo = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVeiculos = new javax.swing.JTable();
        pLocar = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtBuscaCliente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbCliente = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbMarca1 = new javax.swing.JComboBox<>();
        cbCategoria1 = new javax.swing.JComboBox<>();
        cbTipo1 = new javax.swing.JComboBox<>();
        btnFiltrarVeiculos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVeiculosDisponiveis = new javax.swing.JTable();
        txtDiasLocacao = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtDataLocacao = new javax.swing.JFormattedTextField();
        btnLocar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        pDevolver = new javax.swing.JPanel();
        pVender = new javax.swing.JPanel();
        btnVoltar = new javax.swing.JButton();

        jTabbedPane2.addTab("tab1", jTabbedPane3);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Tipo de Veículo:");

        jLabel2.setText("Marca:");

        jLabel3.setText("Estado:");

        jLabel4.setText("Categoria:");

        jLabel5.setText("Modelo:");

        jLabel6.setText("Ano:");

        jLabel7.setText("Placa:");

        jLabel8.setText("Valor de Compra:");

        btnIncluir.setText("Incluir Veículo");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        txtValorCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("R$ #,##0.00"))));
        txtValorCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorCompraActionPerformed(evt);
            }
        });

        try {
            txtPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        spAno.setValue(2025);

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Automóvel", "Motocicleta", "Van"}));
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        tblVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblVeiculos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pIncluirLayout = new javax.swing.GroupLayout(pIncluir);
        pIncluir.setLayout(pIncluirLayout);
        pIncluirLayout.setHorizontalGroup(
            pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pIncluirLayout.createSequentialGroup()
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pIncluirLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIncluir)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pIncluirLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pIncluirLayout.createSequentialGroup()
                                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbMarca, 0, 584, Short.MAX_VALUE)
                                    .addComponent(cbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbModelo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spAno)
                                    .addComponent(txtPlaca)
                                    .addComponent(txtValorCompra)
                                    .addComponent(cbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(14, 14, 14))
        );
        pIncluirLayout.setVerticalGroup(
            pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pIncluirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(spAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pIncluirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Incluir Veículo", pIncluir);

        jLabel9.setText("Busca Cliente:");

        txtBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaClienteActionPerformed(evt);
            }
        });

        jLabel10.setText("Cliente:");

        jLabel11.setText("Tipo: ");

        jLabel12.setText("Marca:");

        jLabel13.setText("Categoria:");

        cbTipo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipo1ActionPerformed(evt);
            }
        });

        btnFiltrarVeiculos.setText("Filtrar Veículo");
        btnFiltrarVeiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarVeiculosActionPerformed(evt);
            }
        });

        tblVeiculosDisponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblVeiculosDisponiveis);

        txtDiasLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiasLocacaoActionPerformed(evt);
            }
        });

        jLabel14.setText("Diárias locação:");

        jLabel15.setText("Data de inicio:");

        txtDataLocacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDataLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataLocacaoActionPerformed(evt);
            }
        });

        btnLocar.setText("Locar");
        btnLocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar Campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pLocarLayout = new javax.swing.GroupLayout(pLocar);
        pLocar.setLayout(pLocarLayout);
        pLocarLayout.setHorizontalGroup(
            pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLocarLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFiltrarVeiculos, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pLocarLayout.createSequentialGroup()
                        .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBuscaCliente)
                            .addComponent(cbCliente, 0, 526, Short.MAX_VALUE)
                            .addComponent(cbTipo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbMarca1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbCategoria1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2)
                    .addGroup(pLocarLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDataLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pLocarLayout.createSequentialGroup()
                                .addComponent(btnLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                                .addComponent(btnLocar))
                            .addGroup(pLocarLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDiasLocacao)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pLocarLayout.setVerticalGroup(
            pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLocarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbMarca1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbCategoria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFiltrarVeiculos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiasLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(txtDataLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pLocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLocar)
                    .addComponent(btnLimpar))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Locar Veículo", pLocar);

        javax.swing.GroupLayout pDevolverLayout = new javax.swing.GroupLayout(pDevolver);
        pDevolver.setLayout(pDevolverLayout);
        pDevolverLayout.setHorizontalGroup(
            pDevolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );
        pDevolverLayout.setVerticalGroup(
            pDevolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Devolver Veículo", pDevolver);

        javax.swing.GroupLayout pVenderLayout = new javax.swing.GroupLayout(pVender);
        pVender.setLayout(pVenderLayout);
        pVenderLayout.setHorizontalGroup(
            pVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );
        pVenderLayout.setVerticalGroup(
            pVenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Vender Veículo", pVender);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txtBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaClienteActionPerformed
 
    private void txtDiasLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiasLocacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiasLocacaoActionPerformed

    private void btnFiltrarVeiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarVeiculosActionPerformed
        // TODO add your handling code here:
        atualizarTabelaVeiculosDisponiveis();
    }//GEN-LAST:event_btnFiltrarVeiculosActionPerformed

    private void btnLocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocarActionPerformed
        // TODO add your handling code here:
            int linha = tblVeiculosDisponiveis.getSelectedRow();
            if (linha == -1) {
                JOptionPane.showMessageDialog(null, "Selecione um veículo para locação.");
                return;
            }

            Cliente cliente = (Cliente) cbCliente.getSelectedItem();
            if (cliente == null) {
                JOptionPane.showMessageDialog(null, "Selecione um cliente.");
                return;
            }

            int dias;
            try {
                dias = Integer.parseInt(txtDiasLocacao.getText().trim());
                if (dias <= 0) throw new NumberFormatException();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Informe um número válido de dias.");
                return;
            }

            Calendar data;
            try {
                DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                Date parsed = df.parse(txtDataLocacao.getText().trim());
                data = Calendar.getInstance();
                data.setTime(parsed);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Data inválida. Use o formato dd/MM/yyyy.");
                return;
            }

            Veiculo veiculo = veiculoLocacaoTableModel.getVeiculoNaLinha(linha);
            veiculo.locar(dias, data, cliente);

            JOptionPane.showMessageDialog(null, "Veículo locado com sucesso.");
            atualizarTabelaVeiculosDisponiveis();
            
            cbTipo1.setSelectedItem("Todos");
            cbMarca1.setSelectedIndex(0);
            cbCategoria1.setSelectedIndex(0);

            tblVeiculosDisponiveis.clearSelection();
        
    }//GEN-LAST:event_btnLocarActionPerformed

    private void txtDataLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataLocacaoActionPerformed
            // TODO add your handling code here:
    }//GEN-LAST:event_txtDataLocacaoActionPerformed

    private void cbTipo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipo1ActionPerformed

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        // TODO add your handling code here:
        String tipo = (String) cbTipo.getSelectedItem();
        cbModelo.removeAllItems();

        if (tipo.equals("Automóvel")) {
            for (ModeloAutomovel modelo : ModeloAutomovel.values()) {
                cbModelo.addItem(modelo);
            }
        } else if (tipo.equals("Motocicleta")) {
            for (ModeloMotocicleta modelo : ModeloMotocicleta.values()) {
                cbModelo.addItem(modelo);
            }
        } else if (tipo.equals("Van")) {
            for (ModeloVan modelo : ModeloVan.values()) {
                cbModelo.addItem(modelo);
            }
        }
    }//GEN-LAST:event_cbTipoActionPerformed

    private void txtValorCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorCompraActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        // TODO add your handling code here:
        if (!validarCampos()) return;

        String placa = txtPlaca.getText().trim();
        int ano = (Integer) spAno.getValue();

        Object valorObj = txtValorCompra.getValue();
        double valorCompra = ((Number) valorObj).doubleValue();

        Estado estado = (Estado) cbEstado.getSelectedItem();
        Marca marca = (Marca) cbMarca.getSelectedItem();
        Categoria categoria = (Categoria) cbCategoria.getSelectedItem();
        String tipo = (String) cbTipo.getSelectedItem();

        Veiculo veiculo = null;

        if (tipo.equals("Automóvel")) {
            ModeloAutomovel modelo = (ModeloAutomovel) cbModelo.getSelectedItem();
            veiculo = new Automovel(ano, placa, valorCompra, estado, categoria, marca, modelo);
        } else if (tipo.equals("Motocicleta")) {
            ModeloMotocicleta modelo = (ModeloMotocicleta) cbModelo.getSelectedItem();
            veiculo = new Motocicleta(ano, placa, valorCompra, estado, categoria, marca, modelo);
        } else if (tipo.equals("Van")) {
            ModeloVan modelo = (ModeloVan) cbModelo.getSelectedItem();
            veiculo = new Van(ano, placa, valorCompra, estado, categoria, marca, modelo);
        }

        if (veiculo != null) {
            VeiculoRepository.getInstance().adicionar(veiculo);
            veiculoTableModel.adicionar(veiculo); // <- Atualiza a tabela
            JOptionPane.showMessageDialog(null, "Veículo incluído com sucesso.");
            limparCampos();
        }
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ViewVeiculo().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrarVeiculos;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnLocar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<Categoria> cbCategoria;
    private javax.swing.JComboBox<Categoria> cbCategoria1;
    private javax.swing.JComboBox<Cliente> cbCliente;
    private javax.swing.JComboBox<Estado> cbEstado;
    private javax.swing.JComboBox<Marca> cbMarca;
    private javax.swing.JComboBox<Marca> cbMarca1;
    private javax.swing.JComboBox<Object> cbModelo;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JComboBox<String> cbTipo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JPanel pDevolver;
    private javax.swing.JPanel pIncluir;
    private javax.swing.JPanel pLocar;
    private javax.swing.JPanel pVender;
    private javax.swing.JSpinner spAno;
    private javax.swing.JTable tblVeiculos;
    private javax.swing.JTable tblVeiculosDisponiveis;
    private javax.swing.JTextField txtBuscaCliente;
    private javax.swing.JFormattedTextField txtDataLocacao;
    private javax.swing.JTextField txtDiasLocacao;
    private javax.swing.JFormattedTextField txtPlaca;
    private javax.swing.JFormattedTextField txtValorCompra;
    // End of variables declaration//GEN-END:variables

    private void atualizarModelos() {
        String tipoSelecionado = cbTipo1.getSelectedItem() != null ? cbTipo1.getSelectedItem().toString() : "Todos";

        cbModelo.removeAllItems();
        
        if(null != tipoSelecionado)switch (tipoSelecionado) {
            case "Automóvel" -> {
                for(ModeloAutomovel modelo : ModeloAutomovel.values()){
                    cbModelo.addItem(modelo);
                }
            }
            case "Motocicleta" -> {
                for (ModeloMotocicleta modelo : ModeloMotocicleta.values()){
                    cbModelo.addItem(modelo);
                }
            }
            case "Van" -> {
                for (ModeloVan modelo : ModeloVan.values()){
                    cbModelo.addItem(modelo);
                }
            }
            default -> {
            }
        }
        
        cbModelo.addActionListener(e -> cbModelo.hidePopup());
    }
    
    private void atualizarComboClientes(List<Cliente> clientesFiltrados) {
        cbCliente.removeAllItems();
        for (Cliente c : clientesFiltrados) {
            cbCliente.addItem(c);
        }
    }
    
    private void filtrarClientes() {
        String texto = txtBuscaCliente.getText().trim().toLowerCase();

        List<Cliente> todos = ClienteRepository.getInstance().getTodos();
        List<Cliente> filtrados = todos.stream()
            .filter(c -> (c.getNome() + " " + c.getSobrenome()).toLowerCase().contains(texto)
                      || c.getCpf().toLowerCase().contains(texto))
            .collect(Collectors.toList());

        atualizarComboClientes(filtrados);
    }
    
    private void atualizarCombosPorTipo() {
    String tipoSelecionado = (String) cbTipo.getSelectedItem();

    cbModelo.removeAllItems();
    cbMarca.removeAllItems();
    cbCategoria.removeAllItems();
    cbEstado.removeAllItems();

    for (Estado e : Estado.values()) {
        cbEstado.addItem(e);
    }

    for (Categoria c : Categoria.values()) {
        cbCategoria.addItem(c);
    }

    switch (tipoSelecionado) {
        case "Automóvel" -> {
            for (Marca m : new Marca[]{Marca.VW, Marca.GM, Marca.FIAT}) {
                cbMarca.addItem(m);
            }
            for (ModeloAutomovel modelo : ModeloAutomovel.values()) {
                cbModelo.addItem(modelo);
            }
            }

        case "Motocicleta" -> {
            for (Marca m : new Marca[]{Marca.HONDA, Marca.HARLEY_DAVIDSON}) {
                cbMarca.addItem(m);
            }
            for (ModeloMotocicleta modelo : ModeloMotocicleta.values()) {
                cbModelo.addItem(modelo);
            }
            }

        case "Van" -> {
            for (Marca m : new Marca[]{Marca.MERCEDES, Marca.FIAT, Marca.VW}) {
                cbMarca.addItem(m);
            }
            for (ModeloVan modelo : ModeloVan.values()) {
                cbModelo.addItem(modelo);
            }
            }
    }
}

    private void preencherFiltrosLocacao() {
        cbTipo1.removeAllItems();
        
        cbTipo1.addItem("Todos");
        cbTipo1.addItem("Automóvel");
        cbTipo1.addItem("Motocicleta");
        cbTipo1.addItem("Van");
        cbTipo1.setSelectedItem("Todos");


        cbMarca1.removeAllItems();
        cbMarca1.addItem(null); 
        for (Marca m : Marca.values()) cbMarca1.addItem(m);


        cbCategoria1.removeAllItems();
        cbCategoria1.addItem(null);
        for (Categoria c : Categoria.values()) cbCategoria1.addItem(c);

        cbCliente.removeAllItems();
        for (Cliente c : ClienteRepository.getInstance().getTodos()) cbCliente.addItem(c);
    }
    
    private void atualizarTabelaVeiculosDisponiveis() {
        List<Veiculo> veiculosFiltrados = filtrarVeiculosDisponiveis();
        veiculoLocacaoTableModel.setVeiculos(veiculosFiltrados);
    }
    
    private boolean validarCampos() {
        String placa = txtPlaca.getText().trim();

        // Validação da placa
        if (!placa.matches("[A-Z]{3}-\\d{4}")) {
            JOptionPane.showMessageDialog(this, "Placa inválida. Use o formato XXX-0000.");
            return false;
        }

        // Validação do valor de compra usando getValue()
        Object valorObj = txtValorCompra.getValue();
        if (valorObj == null || !(valorObj instanceof Number)) {
            JOptionPane.showMessageDialog(this, "Valor de compra inválido.");
            return false;
        }

        // Validação do modelo
        if (cbModelo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um modelo.");
            return false;
        }

        return true;
    }

    private void limparCampos() {
        txtPlaca.setText("");
        txtValorCompra.setText("");
        spAno.setValue(2025);
        cbEstado.setSelectedIndex(0);
        cbCategoria.setSelectedIndex(0);
        cbMarca.setSelectedIndex(0);
        cbTipo.setSelectedIndex(0);
        cbModelo.removeAllItems();
    }
    
    private List<Veiculo> filtrarVeiculosDisponiveis() {
        String tipoSelecionado = (String) cbTipo1.getSelectedItem();
        Marca marca = (Marca) cbMarca1.getSelectedItem();
        Categoria categoria = (Categoria) cbCategoria1.getSelectedItem();

        return VeiculoRepository.getInstance().getTodos().stream()
            .filter(v -> v.getEstado() == Estado.DISPONIVEL)
            .filter(v -> tipoSelecionado == null || tipoSelecionado.equals("Todos") ||
                (tipoSelecionado.equals("Automóvel") && v instanceof Automovel) ||
                (tipoSelecionado.equals("Motocicleta") && v instanceof Motocicleta) ||
                (tipoSelecionado.equals("Van") && v instanceof Van))
            .filter(v -> marca == null || v.getMarca() == marca)
            .filter(v -> categoria == null || v.getCategoria() == categoria)
            .collect(Collectors.toList());
    }
    

    
           
}
